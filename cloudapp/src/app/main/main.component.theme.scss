@use '@angular/material' as mat;

@mixin main-component-theme($theme, $typgraphy) {
  div.highlight {
    border: mat.get-theme-color($theme, primary) solid 2px;
    color: mat.get-theme-color($theme, on-primary-container);
    background-color: mat.get-theme-color($theme, primary-container);
    padding: 5px;
    font-weight: bolder;
  }
}

@mixin theme-component-theme($theme, $typgraphy) {
  // Themed text utilities following Cloud Apps Style Guide
  .text-primary { 
    color: mat.get-theme-color($theme, primary); 
    font-family: 'Roboto', sans-serif;
    font-weight: 300; // Running text weight
  }
  .text-secondary { 
    color: mat.get-theme-color($theme, secondary); 
    font-family: 'Roboto', sans-serif;
    font-weight: 300; // Running text weight
  }
  .text-tertiary { 
    color: mat.get-theme-color($theme, tertiary); 
    font-family: 'Roboto', sans-serif;
    font-weight: 300; // Running text weight
  }
  .text-default { 
    color: #000; 
    font-family: 'Roboto', sans-serif;
    font-weight: 300; // Running text weight
  }

  // Themed backgrounds
  .bg-surface { background-color: mat.get-theme-color($theme, surface); }
  .bg-surface-variant { background-color: mat.get-theme-color($theme, surface-variant); }

  // Themed borders
  .border { border: 1px solid mat.get-theme-color($theme, outline-variant); }
  .border-primary { border-color: mat.get-theme-color($theme, primary); }
  .border-secondary { border-color: mat.get-theme-color($theme, secondary); }
  .border-tertiary { border-color: mat.get-theme-color($theme, tertiary); }
  .border-bottom { border-bottom: 1px solid mat.get-theme-color($theme, outline-variant); }
  .border-bottom-primary { border-bottom: 1px solid mat.get-theme-color($theme, primary); }
  .border-top { border-top: 1px solid mat.get-theme-color($theme, outline-variant); }
  .border-top-primary { border-top: 1px solid mat.get-theme-color($theme, primary); }
  .border-left { border-left: 3px solid mat.get-theme-color($theme, outline-variant); }
  .border-left-primary { border-left: 3px solid mat.get-theme-color($theme, primary); }
  .border-left-secondary { border-left: 3px solid mat.get-theme-color($theme, secondary); }
  .border-left-tertiary { border-left: 3px solid mat.get-theme-color($theme, tertiary); }

  // Links
  a { color: mat.get-theme-color($theme, primary); }

  // Buttons
  .btn { color: mat.get-theme-color($theme, on-surface); border: 1px solid mat.get-theme-color($theme, outline-variant); background-color: mat.get-theme-color($theme, surface); }
  .btn-primary { background-color: mat.get-theme-color($theme, primary); color: whitesmoke; border-color: mat.get-theme-color($theme, primary); }
  .btn-secondary { background-color: mat.get-theme-color($theme, secondary); color: mat.get-theme-color($theme, on-secondary); border-color: mat.get-theme-color($theme, secondary); }
  .btn-tertiary { background-color: mat.get-theme-color($theme, tertiary); color: mat.get-theme-color($theme, on-tertiary); border-color: mat.get-theme-color($theme, tertiary); }
  .btn-outline-primary { background-color: transparent; color: mat.get-theme-color($theme, primary); border-color: mat.get-theme-color($theme, primary); }
  .btn-outline-secondary { background-color: transparent; color: mat.get-theme-color($theme, secondary); border-color: mat.get-theme-color($theme, secondary); }
  .btn-outline-tertiary { background-color: transparent; color: mat.get-theme-color($theme, tertiary); border-color: mat.get-theme-color($theme, tertiary); }
  .change-set-button { background-color: mat.get-theme-color($theme, primary);}

  // Ensure menu option descriptions are not bold
  .menu-option-button small {
    font-weight: normal;
  }

  .btn-primary:hover:not(:disabled) { background-color: color-mix(in srgb, mat.get-theme-color($theme, primary) 88%, transparent); }
  .btn-secondary:hover:not(:disabled) { background-color: color-mix(in srgb, mat.get-theme-color($theme, secondary) 88%, transparent); }
  .btn-tertiary:hover:not(:disabled) { background-color: color-mix(in srgb, mat.get-theme-color($theme, tertiary) 88%, transparent); }
  .btn-outline-primary:hover:not(:disabled) { background-color: mat.get-theme-color($theme, primary); color: whitesmoke; }
  .btn-outline-secondary:hover:not(:disabled) { background-color: mat.get-theme-color($theme, secondary); color: mat.get-theme-color($theme, on-secondary); }
  .btn-outline-tertiary:hover:not(:disabled) { background-color: mat.get-theme-color($theme, tertiary); color: mat.get-theme-color($theme, on-tertiary); }

  // Chips / badges
  .chip { background-color: mat.get-theme-color($theme, surface-variant); color: mat.get-theme-color($theme, on-surface-variant); }
  .chip-primary { background-color: mat.get-theme-color($theme, primary-container); color: mat.get-theme-color($theme, on-primary-container); }
  .chip-secondary { background-color: mat.get-theme-color($theme, secondary-container); color: mat.get-theme-color($theme, on-secondary-container); }
  .chip-tertiary { background-color: mat.get-theme-color($theme, tertiary-container); color: mat.get-theme-color($theme, on-tertiary-container); }

  // Cards
  .card { background-color: mat.get-theme-color($theme, surface); border: 1px solid mat.get-theme-color($theme, outline-variant); color: mat.get-theme-color($theme, on-surface); }
  .card-primary { border-color: mat.get-theme-color($theme, primary); }
  .card-secondary { border-color: mat.get-theme-color($theme, secondary); }
  .card-tertiary { border-color: mat.get-theme-color($theme, tertiary); }

  // Semantic status helpers
  .text-success { color: mat.get-theme-color($theme, tertiary); }
  .text-warning { color: mat.get-theme-color($theme, secondary); }
  .text-error { color: mat.get-theme-color($theme, error); }
  .chip-success { background-color: mat.get-theme-color($theme, tertiary-container); color: mat.get-theme-color($theme, on-tertiary-container); }
  .chip-warning { background-color: mat.get-theme-color($theme, secondary-container); color: mat.get-theme-color($theme, on-secondary-container); }
  .chip-error { background-color: mat.get-theme-color($theme, error-container); color: mat.get-theme-color($theme, on-error-container); }
  .border-left-success { border-left: 3px solid mat.get-theme-color($theme, tertiary); }
  .border-left-warning { border-left: 3px solid mat.get-theme-color($theme, secondary); }
  .border-left-error { border-left: 3px solid mat.get-theme-color($theme, error); }

  // Progress
  .progress-track { background-color: mat.get-theme-color($theme, surface-variant); }
  .progress-bar { background-color: mat.get-theme-color($theme, primary); color: mat.get-theme-color($theme, on-primary); }

 .note-management {
    border: mat.get-theme-color($theme, primary) solid 2px;
    color: mat.get-theme-color($theme, on-primary-container);
    background-color: mat.get-theme-color($theme, secondary-container);
    padding: 5px;
    font-weight: bolder;
  }

  .user-card {
      border-left: 3px solid mat.get-theme-color($theme, outline);
      background-color: mat.get-theme-color($theme, surface);
      
      &.has-success {
        border-left-color: mat.get-theme-color($theme, primary);
      }
      
      &.has-error {
        border-left-color: mat.get-theme-color($theme, error);
      }
      
      // Status messages
      .status {
        &.success {
          background-color: mat.get-theme-color($theme, primary-container);
          color: mat.get-theme-color($theme, on-primary-container);
        }
        
        &.error {
          background-color: mat.get-theme-color($theme, error-container);
          color: mat.get-theme-color($theme, on-error-container);
        }
      }
  }

  // Set selection components
  .instruction-message {
    .instruction-card {
      background-color: mat.get-theme-color($theme, primary-container);
      border-left: 4px solid mat.get-theme-color($theme, primary);
      color: mat.get-theme-color($theme, on-primary-container);
    }
  }

  .set-selection {
    .set-option {
      .set-button {
        color: mat.get-theme-color($theme, on-primary);
        border: 1px solid mat.get-theme-color($theme, outline);
        
        &:hover:not(:disabled) {
          background-color: color-mix(in srgb, mat.get-theme-color($theme, primary) 80%, transparent);
        }
        
        &:disabled {
          background-color: mat.get-theme-color($theme, surface-variant);
          color: mat.get-theme-color($theme, on-surface-variant);
        }
      }
    }
  }

  .selected-set-info {
    .selected-set-card {
      background-color: mat.get-theme-color($theme, tertiary-container);
      border-left: 4px solid mat.get-theme-color($theme, tertiary);
      color: mat.get-theme-color($theme, on-tertiary-container);
    }
    
    .change-set-button {
      background-color: mat.get-theme-color($theme, outline);
      color: mat.get-theme-color($theme, on-surface);
      border: 1px solid mat.get-theme-color($theme, outline-variant);
      
      &:hover:not(:disabled) {
        background-color: color-mix(in srgb, mat.get-theme-color($theme, outline) 80%, transparent);
      }
    }
  }

  .set-member-count {
    .success-card {
      background-color: mat.get-theme-color($theme, tertiary-container);
      color: mat.get-theme-color($theme, on-tertiary-container);
      border: 1px solid mat.get-theme-color($theme, tertiary);
    }
    
    .success-icon {
      color: mat.get-theme-color($theme, tertiary);
    }
  }

  .process-button {
    background-color: mat.get-theme-color($theme, primary);
    color: mat.get-theme-color($theme, on-primary);
    border: 1px solid mat.get-theme-color($theme, outline);
    
    &:hover:not(:disabled) {
      background-color: color-mix(in srgb, mat.get-theme-color($theme, primary) 90%, transparent);
    }
    
    &:disabled {
      background-color: mat.get-theme-color($theme, surface-variant);
      color: mat.get-theme-color($theme, on-surface-variant);
    }
  }

  // Form controls using primary theme color
  .mat-mdc-form-field {
    // Focus state - primary color
    &.mat-focused {
      .mdc-notched-outline__leading,
      .mdc-notched-outline__notch,
      .mdc-notched-outline__trailing {
        border-color: mat.get-theme-color($theme, primary) !important;
      }
      
      .mat-mdc-form-field-label,
      .mdc-floating-label {
        color: mat.get-theme-color($theme, primary) !important;
      }
    }
  }

  // Radio buttons and checkboxes - primary theme color
  .mat-mdc-radio-button {
    &.mat-primary {
      --mdc-radio-selected-icon-color: #{mat.get-theme-color($theme, primary)};
      --mdc-radio-selected-hover-icon-color: #{mat.get-theme-color($theme, primary)};
      --mdc-radio-selected-focus-icon-color: #{mat.get-theme-color($theme, primary)};
      --mdc-radio-selected-pressed-icon-color: #{mat.get-theme-color($theme, primary)};
    }
  }

  .mat-mdc-checkbox {
    &.mat-primary {
      --mdc-checkbox-selected-icon-color: #{mat.get-theme-color($theme, primary)};
      --mdc-checkbox-selected-hover-icon-color: #{mat.get-theme-color($theme, primary)};
      --mdc-checkbox-selected-focus-icon-color: #{mat.get-theme-color($theme, primary)};
      --mdc-checkbox-selected-pressed-icon-color: #{mat.get-theme-color($theme, primary)};
    }
  }

  // Select options - focus state
  .mat-mdc-select {
    &.mat-focused {
      .mat-mdc-select-arrow {
        color: mat.get-theme-color($theme, primary) !important;
      }
    }
  }

  // Toggle switches - primary theme color
  .mat-slide-toggle {
    &.mat-primary {
      --mdc-switch-selected-handle-color: #{mat.get-theme-color($theme, primary)};
      --mdc-switch-selected-track-color: #{mat.get-theme-color($theme, primary)};
      --mdc-switch-selected-hover-handle-color: #{mat.get-theme-color($theme, primary)};
      --mdc-switch-selected-focus-handle-color: #{mat.get-theme-color($theme, primary)};
      --mdc-switch-selected-pressed-handle-color: #{mat.get-theme-color($theme, primary)};
    }
  }

  // Toggle icons - primary theme color
  .toggle-icon { 
    color: mat.get-theme-color($theme, primary) !important;
    
    &:hover {
      color: color-mix(in srgb, #{mat.get-theme-color($theme, primary)} 80%, black) !important;
    }
  }

  // ECA button icons - primary theme color
  .eca-button {
    color: mat.get-theme-color($theme, primary) !important;
    
    &:hover {
      color: color-mix(in srgb, #{mat.get-theme-color($theme, primary)} 80%, black) !important;
    }
  }

  .param-compact, .selected-set-card {
    border-left: 4px solid mat.get-theme-color($theme, primary) !important;
  } 
}