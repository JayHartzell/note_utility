@use '@angular/material' as mat;

@mixin main-component-theme($theme, $typgraphy) {
  div.highlight {
    border: mat.get-theme-color($theme, primary) solid 2px;
    color: mat.get-theme-color($theme, on-primary-container);
    background-color: mat.get-theme-color($theme, primary-container);
    padding: 5px;
    font-weight: bolder;
  }
}

@mixin theme-component-theme($theme, $typgraphy) {
 .note-management {
    border: mat.get-theme-color($theme, primary) solid 2px;
    color: mat.get-theme-color($theme, on-primary-container);
    background-color: mat.get-theme-color($theme, secondary-container);
    padding: 5px;
    font-weight: bolder;
  }

  .user-card {
      border-left: 3px solid mat.get-theme-color($theme, outline);
      background-color: mat.get-theme-color($theme, surface);
      
      &.has-success {
        border-left-color: mat.get-theme-color($theme, primary);
      }
      
      &.has-error {
        border-left-color: mat.get-theme-color($theme, error);
      }
      
      // Status messages
      .status {
        &.success {
          background-color: mat.get-theme-color($theme, primary-container);
          color: mat.get-theme-color($theme, on-primary-container);
        }
        
        &.error {
          background-color: mat.get-theme-color($theme, error-container);
          color: mat.get-theme-color($theme, on-error-container);
        }
      }
  }

  // Set selection components
  .instruction-message {
    .instruction-card {
      background-color: mat.get-theme-color($theme, primary-container);
      border-left: 4px solid mat.get-theme-color($theme, primary);
      color: mat.get-theme-color($theme, on-primary-container);
    }
  }

  .set-selection {
    .set-option {
      .set-button {
        background-color: mat.get-theme-color($theme, primary);
        color: mat.get-theme-color($theme, on-primary);
        border: 1px solid mat.get-theme-color($theme, outline);
        
        &:hover:not(:disabled) {
          background-color: color-mix(in srgb, mat.get-theme-color($theme, primary) 80%, transparent);
        }
        
        &:disabled {
          background-color: mat.get-theme-color($theme, surface-variant);
          color: mat.get-theme-color($theme, on-surface-variant);
        }
      }
    }
  }

  .selected-set-info {
    .selected-set-card {
      background-color: mat.get-theme-color($theme, tertiary-container);
      border-left: 4px solid mat.get-theme-color($theme, tertiary);
      color: mat.get-theme-color($theme, on-tertiary-container);
    }
    
    .change-set-button {
      background-color: mat.get-theme-color($theme, outline);
      color: mat.get-theme-color($theme, on-surface);
      border: 1px solid mat.get-theme-color($theme, outline-variant);
      
      &:hover:not(:disabled) {
        background-color: color-mix(in srgb, mat.get-theme-color($theme, outline) 80%, transparent);
      }
    }
  }

  .set-member-count {
    .success-card {
      background-color: mat.get-theme-color($theme, tertiary-container);
      color: mat.get-theme-color($theme, on-tertiary-container);
      border: 1px solid mat.get-theme-color($theme, tertiary);
    }
    
    .success-icon {
      color: mat.get-theme-color($theme, tertiary);
    }
  }

  .process-button {
    background-color: mat.get-theme-color($theme, primary);
    color: mat.get-theme-color($theme, on-primary);
    border: 1px solid mat.get-theme-color($theme, outline);
    
    &:hover:not(:disabled) {
      background-color: color-mix(in srgb, mat.get-theme-color($theme, primary) 90%, transparent);
    }
    
    &:disabled {
      background-color: mat.get-theme-color($theme, surface-variant);
      color: mat.get-theme-color($theme, on-surface-variant);
    }
  }
}